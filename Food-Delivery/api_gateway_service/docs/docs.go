// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/alerts/admin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new admin alert to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Create a new admin alert",
                "parameters": [
                    {
                        "description": "Alert Data",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.CreateAdminAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/notification.AdminAlertResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/alerts/admin/{alertId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of an admin alert by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Get admin alert by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert ID",
                        "name": "alertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.AdminAlertResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Alert ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Alert Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing admin alert by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Update admin alert by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert ID",
                        "name": "alertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Alert Data",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.UpdateAdminAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.AdminAlertResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Alert ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Alert Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove an admin alert from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Delete admin alert by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert ID",
                        "name": "alertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.AdminAlertResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Alert ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Alert Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/cart-items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all items in a specific cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItems"
                ],
                "summary": "List all cart items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cartId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.CartItemListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Cart ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/cart-items/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new item to a cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItems"
                ],
                "summary": "Create a new cart item",
                "parameters": [
                    {
                        "description": "Cart Item Data",
                        "name": "cart_item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateCartItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/product.CartItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/cart-items/{cartItemId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a cart item by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItems"
                ],
                "summary": "Get cart item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart Item ID",
                        "name": "cartItemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.CartItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Cart Item ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Cart Item Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing cart item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItems"
                ],
                "summary": "Update cart item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart Item ID",
                        "name": "cartItemId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cart Item Data",
                        "name": "cart_item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateCartItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.CartItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Cart Item ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Cart Item Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a cart item from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItems"
                ],
                "summary": "Delete cart item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart Item ID",
                        "name": "cartItemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart Item deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Cart Item ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Cart Item Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/carts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all carts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carts"
                ],
                "summary": "Get all carts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.CartListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/carts/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new cart to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carts"
                ],
                "summary": "Create a new cart",
                "parameters": [
                    {
                        "description": "Cart Data",
                        "name": "cart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateCartRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/product.CartResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/carts/{cartId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a cart by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carts"
                ],
                "summary": "Get cart by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cartId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.CartResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Cart ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Cart Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing cart by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carts"
                ],
                "summary": "Update cart by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cartId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cart Data",
                        "name": "cart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateCartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.CartResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Cart ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Cart Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a cart from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carts"
                ],
                "summary": "Delete cart by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cartId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Cart ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Cart Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-locations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all courier locations in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier"
                ],
                "summary": "Get all courier locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.GetAllCourierLocationsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-locations/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new courier location to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier"
                ],
                "summary": "Create a new courier location",
                "parameters": [
                    {
                        "description": "Courier Location Data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.CreateCourierLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierLocationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-locations/{locationId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a courier location by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier"
                ],
                "summary": "Get courier location by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierLocationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Location ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Location Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing courier location by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier"
                ],
                "summary": "Update courier location by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Courier Location Data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.UpdateCourierLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierLocationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Location ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Location Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a courier location from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier"
                ],
                "summary": "Delete courier location by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.DeleteCourierLocationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Location ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Location Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all courier orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierOrders"
                ],
                "summary": "List all courier orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierOrderListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modify details of an existing courier order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierOrders"
                ],
                "summary": "Update a courier order",
                "parameters": [
                    {
                        "description": "Courier Order Update Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.UpdateCourierOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new courier order to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierOrders"
                ],
                "summary": "Create a new courier order",
                "parameters": [
                    {
                        "description": "Courier Order Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.CreateCourierOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-orders/{orderId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a courier order by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierOrders"
                ],
                "summary": "Get courier order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a courier order from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierOrders"
                ],
                "summary": "Delete a courier order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/couriers": {
            "get": {
                "description": "Retrieve a list of all couriers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Couriers"
                ],
                "summary": "Get All Couriers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetAllCouriersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/couriers/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new courier to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Couriers"
                ],
                "summary": "Create a new courier",
                "parameters": [
                    {
                        "description": "Courier Data",
                        "name": "courier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.CreateCourierRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/couriers/login": {
            "post": {
                "description": "Authenticate a courier and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Couriers"
                ],
                "summary": "Courier Login",
                "parameters": [
                    {
                        "description": "Courier Login Data",
                        "name": "courier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CourierLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.CourierLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/couriers/register": {
            "post": {
                "description": "Register a new courier in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Couriers"
                ],
                "summary": "Courier Registration",
                "parameters": [
                    {
                        "description": "Courier Registration Data",
                        "name": "courier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CourierRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.CourierRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/couriers/{courierId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a courier by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Couriers"
                ],
                "summary": "Get courier by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courierId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Courier ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Courier Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing courier by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Couriers"
                ],
                "summary": "Update courier by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courierId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Courier Data",
                        "name": "courier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.UpdateCourierRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.CourierResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Courier ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Courier Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a courier from the system by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Couriers"
                ],
                "summary": "Delete courier by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courierId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Courier deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Courier ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Courier Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/notifications/courier": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all courier notifications",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "List all courier notifications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.CourierNotificationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new courier notification to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Create a new courier notification",
                "parameters": [
                    {
                        "description": "Notification Data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.CreateCourierNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/notification.CourierNotificationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/notifications/courier/{notificationId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a courier notification by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get courier notification by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.CourierNotificationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Notification ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Notification Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a courier notification from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete a courier notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Notification ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Notification Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/notifications/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all user notifications",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "List all user notifications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.UserNotificationListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new user notification to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Create a new user notification",
                "parameters": [
                    {
                        "description": "Notification Data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.CreateUserNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/notification.CreateUserNotificationRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/notifications/user/{notificationId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a user notification by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notification by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.UserNotificationRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid Notification ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Notification Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a user notification from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete a user notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.UserNotificationResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Notification ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Notification Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all orders with optional filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "List all orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID Filter",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order Status Filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OrderProductListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modify details of an existing order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update an order",
                "parameters": [
                    {
                        "description": "Order Update Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateOrderProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OrderProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new order to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateOrderProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/product.OrderProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new order to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/courier.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the order history for a specific courier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get courier order history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courierId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.GetCourierOrderHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Courier ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders/{id}/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the status of an existing order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order Status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.UpdateOrderStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.UpdateOrderStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders/{orderId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of an order by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OrderProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing order by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.UpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove an order from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Delete an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all products in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "List all products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.ProductListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/products/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new product to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/product.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/products/{productId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a product by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Product ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing product by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Product ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a product from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Product ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/recommendations/order": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all order recommendations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "List all order recommendations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OrderRecommendationListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modify details of an existing order recommendation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Update an order recommendation",
                "parameters": [
                    {
                        "description": "Order Recommendation Update Data",
                        "name": "recommendation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateOrderRecommendationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OrderRecommendationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Recommendation Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new order recommendation to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Create a new order recommendation",
                "parameters": [
                    {
                        "description": "Order Recommendation Data",
                        "name": "recommendation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateOrderRecommendationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/product.OrderRecommendationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/recommendations/order/{recommendationId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of an order recommendation by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Get order recommendation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recommendation ID",
                        "name": "recommendationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OrderRecommendationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Recommendation ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Recommendation Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove an order recommendation from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Delete an order recommendation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recommendation ID",
                        "name": "recommendationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Recommendation ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Recommendation Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/recommended-orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of recommended orders for a courier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get recommended orders for a courier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courierId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.GetRecommendedOrdersResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Courier ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all tasks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.GetAllTasksResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/tasks/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new task to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task Data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/courier.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/tasks/{taskId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a task by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Task ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Task Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing task by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task Data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier.UpdateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/courier.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Task ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Task Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a task from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Task ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Task Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Retrieve a list of all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get All Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetAllUsersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "description": "Authenticate a user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User Login Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users/register": {
            "post": {
                "description": "Register a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "User Registration Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.UserRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}": {
            "get": {
                "description": "Retrieve a specific user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "description": "Update User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "courier.Courier": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Kuryerning noyob ID'si",
                    "type": "string"
                },
                "email": {
                    "description": "Kuryerning elektron pochtasi",
                    "type": "string"
                },
                "name": {
                    "description": "Kuryerning ismi",
                    "type": "string"
                },
                "phone_number": {
                    "description": "Kuryerning telefon raqami",
                    "type": "string"
                },
                "status": {
                    "description": "Kuryerning holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.CourierStatus"
                        }
                    ]
                }
            }
        },
        "courier.CourierLocationResponse": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "updated_at": {
                    "description": "ISO 8601 timestamp format (e.g., \"2023-12-31T12:34:56Z\")",
                    "type": "string"
                }
            }
        },
        "courier.CourierOrder": {
            "type": "object",
            "properties": {
                "assigned_time": {
                    "description": "Tayinlangan vaqt",
                    "type": "string"
                },
                "courier_id": {
                    "description": "Kuryer ID'si",
                    "type": "string"
                },
                "courier_order_id": {
                    "description": "Kuryer-buyurtma munosabatining noyob ID'si",
                    "type": "string"
                },
                "last_updated": {
                    "description": "Oxirgi yangilangan vaqt",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtma ID'si",
                    "type": "string"
                },
                "status": {
                    "description": "Yetkazib berish holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.CourierOrderStatus"
                        }
                    ]
                }
            }
        },
        "courier.CourierOrderListResponse": {
            "type": "object",
            "properties": {
                "courier_orders": {
                    "description": "Kuryer-buyurtma munosabatlari ro'yxati",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/courier.CourierOrder"
                    }
                }
            }
        },
        "courier.CourierOrderResponse": {
            "type": "object",
            "properties": {
                "courier_order": {
                    "description": "Kuryer-buyurtma munosabatlari ma'lumotlari (Create va Get operatsiyalari uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.CourierOrder"
                        }
                    ]
                },
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "courier.CourierOrderStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "CourierOrderStatus_ASSIGNED": "Yetkazib berish holati: tayinlangan",
                "CourierOrderStatus_DELIVERED": "Yetkazib berish holati: yetkazilgan",
                "CourierOrderStatus_EN_ROUTE": "Yetkazib berish holati: yetkazilmoqda",
                "CourierOrderStatus_PAYMENT_COLLECTED": "Yetkazib berish holati: to'lov yig'ilgan",
                "CourierOrderStatus_PICKED_UP": "Yetkazib berish holati: olib ketilgan"
            },
            "x-enum-varnames": [
                "CourierOrderStatus_ASSIGNED",
                "CourierOrderStatus_PICKED_UP",
                "CourierOrderStatus_EN_ROUTE",
                "CourierOrderStatus_DELIVERED",
                "CourierOrderStatus_PAYMENT_COLLECTED"
            ]
        },
        "courier.CourierResponse": {
            "type": "object",
            "properties": {
                "courier": {
                    "description": "Kuryer ma'lumotlari (Create va Get operatsiyalari uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.Courier"
                        }
                    ]
                },
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "courier.CourierStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "CourierStatus_AVAILABLE": "Kuryer holati: mavjud",
                "CourierStatus_ON_DELIVERY": "Kuryer holati: yetkazish jarayonida",
                "CourierStatus_UNAVAILABLE": "Kuryer holati: mavjud emas"
            },
            "x-enum-varnames": [
                "CourierStatus_AVAILABLE",
                "CourierStatus_UNAVAILABLE",
                "CourierStatus_ON_DELIVERY"
            ]
        },
        "courier.CreateCourierLocationRequest": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "courier.CreateCourierOrderRequest": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Kuryer ID'si",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtma ID'si",
                    "type": "string"
                },
                "status": {
                    "description": "Yetkazib berish holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.CourierOrderStatus"
                        }
                    ]
                }
            }
        },
        "courier.CreateCourierRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Kuryerning elektron pochtasi",
                    "type": "string"
                },
                "name": {
                    "description": "Kuryerning ismi",
                    "type": "string"
                },
                "phone_number": {
                    "description": "Kuryerning telefon raqami",
                    "type": "string"
                },
                "status": {
                    "description": "Kuryerning holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.CourierStatus"
                        }
                    ]
                }
            }
        },
        "courier.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "description": "Mijozning ID'si",
                    "type": "string"
                },
                "delivery_address": {
                    "description": "Yetkazib berish manzili",
                    "type": "string"
                },
                "order_details": {
                    "description": "Buyurtma tafsilotlari",
                    "type": "string"
                },
                "payment_status": {
                    "description": "To'lov holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.PaymentStatus"
                        }
                    ]
                }
            }
        },
        "courier.CreateTaskRequest": {
            "type": "object",
            "properties": {
                "assigned_to": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "description": "ISO 8601 date format (e.g., \"2023-12-31\")",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/courier.TaskStatus"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "courier.DeleteCourierLocationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "courier.GetAllCourierLocationsResponse": {
            "type": "object",
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/courier.CourierLocationResponse"
                    }
                }
            }
        },
        "courier.GetAllTasksResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/courier.TaskResponse"
                    }
                }
            }
        },
        "courier.GetCourierOrderHistoryResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/courier.Order"
                    }
                }
            }
        },
        "courier.GetRecommendedOrdersResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/courier.Order"
                    }
                }
            }
        },
        "courier.Order": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "description": "Mijozning ID'si",
                    "type": "string"
                },
                "delivery_address": {
                    "description": "Yetkazib berish manzili",
                    "type": "string"
                },
                "order_date": {
                    "description": "Buyurtma sanasi",
                    "type": "string"
                },
                "order_details": {
                    "description": "Buyurtma tafsilotlari",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtmaning noyob ID'si",
                    "type": "string"
                },
                "payment_status": {
                    "description": "To'lov holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.PaymentStatus"
                        }
                    ]
                }
            }
        },
        "courier.OrderListResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "description": "Buyurtmalar ro'yxati",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/courier.Order"
                    }
                }
            }
        },
        "courier.OrderResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "order": {
                    "description": "Buyurtma ma'lumotlari (Create va Get operatsiyalari uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.Order"
                        }
                    ]
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "courier.OrderStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "OrderStatus_PENDING_Status",
                "OrderStatus_ACCEPTED",
                "OrderStatus_IN_PROGRESS",
                "OrderStatus_DELIVERED",
                "OrderStatus_CANCELED"
            ]
        },
        "courier.PaymentStatus": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-comments": {
                "PaymentStatus_PAID": "To'lov holati: to'langan",
                "PaymentStatus_PENDING": "To'lov holati: kutilyapti"
            },
            "x-enum-varnames": [
                "PaymentStatus_PENDING",
                "PaymentStatus_PAID"
            ]
        },
        "courier.TaskResponse": {
            "type": "object",
            "properties": {
                "assigned_to": {
                    "type": "integer"
                },
                "created_at": {
                    "description": "ISO 8601 timestamp format (e.g., \"2023-12-31T12:34:56Z\")",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "description": "ISO 8601 date format (e.g., \"2023-12-31\")",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/courier.TaskStatus"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "description": "ISO 8601 timestamp format (e.g., \"2023-12-31T12:34:56Z\")",
                    "type": "string"
                }
            }
        },
        "courier.TaskStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "TaskStatus_TODO",
                "TaskStatus_IN_PROGRESS",
                "TaskStatus_DONE"
            ]
        },
        "courier.UpdateCourierLocationRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "courier.UpdateCourierOrderRequest": {
            "type": "object",
            "properties": {
                "assigned_time": {
                    "description": "Tayinlangan vaqt",
                    "type": "string"
                },
                "courier_id": {
                    "description": "Kuryer ID'si",
                    "type": "string"
                },
                "courier_order_id": {
                    "description": "Kuryer-buyurtma munosabatining noyob ID'si",
                    "type": "string"
                },
                "last_updated": {
                    "description": "Oxirgi yangilangan vaqt",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtma ID'si",
                    "type": "string"
                },
                "status": {
                    "description": "Yetkazib berish holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.CourierOrderStatus"
                        }
                    ]
                }
            }
        },
        "courier.UpdateCourierRequest": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Kuryerning noyob ID'si",
                    "type": "string"
                },
                "email": {
                    "description": "Kuryerning elektron pochtasi",
                    "type": "string"
                },
                "name": {
                    "description": "Kuryerning ismi",
                    "type": "string"
                },
                "phone_number": {
                    "description": "Kuryerning telefon raqami",
                    "type": "string"
                },
                "status": {
                    "description": "Kuryerning holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.CourierStatus"
                        }
                    ]
                }
            }
        },
        "courier.UpdateOrderRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "description": "Mijozning ID'si",
                    "type": "string"
                },
                "delivery_address": {
                    "description": "Yetkazib berish manzili",
                    "type": "string"
                },
                "order_details": {
                    "description": "Buyurtma tafsilotlari",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtmaning noyob ID'si",
                    "type": "string"
                },
                "payment_status": {
                    "description": "To'lov holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/courier.PaymentStatus"
                        }
                    ]
                }
            }
        },
        "courier.UpdateOrderStatusRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/courier.OrderStatus"
                }
            }
        },
        "courier.UpdateOrderStatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "courier.UpdateTaskRequest": {
            "type": "object",
            "properties": {
                "assigned_to": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "description": "ISO 8601 date format (e.g., \"2023-12-31\")",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/courier.TaskStatus"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "notification.AdminAlert": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "description": "Ogohlantirishni oladigan admin ID'si",
                    "type": "string"
                },
                "alert_id": {
                    "description": "Ogohlantirish ID'si",
                    "type": "string"
                },
                "created_at": {
                    "description": "Ogohlantirish yaratilgan vaqt",
                    "type": "string"
                },
                "is_read": {
                    "description": "Admin ogohlantirishni o'qiganligini bildiradi",
                    "type": "boolean"
                },
                "message": {
                    "description": "Ogohlantirish matni",
                    "type": "string"
                },
                "type": {
                    "description": "Ogohlantirish turi",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.AdminAlertType"
                        }
                    ]
                }
            }
        },
        "notification.AdminAlertResponse": {
            "type": "object",
            "properties": {
                "alert": {
                    "description": "Admin ogohlantirishi ma'lumotlari (Create operatsiyasi uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.AdminAlert"
                        }
                    ]
                },
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "notification.AdminAlertType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "AdminAlertType_COURIER_ACTIVITY": "Kuryer faoliyati ogohlantirishi",
                "AdminAlertType_NEW_ORDER": "Yangi buyurtma ogohlantirishi",
                "AdminAlertType_STATUS_CHANGE": "Holat o'zgarishi ogohlantirishi"
            },
            "x-enum-varnames": [
                "AdminAlertType_NEW_ORDER",
                "AdminAlertType_STATUS_CHANGE",
                "AdminAlertType_COURIER_ACTIVITY"
            ]
        },
        "notification.CourierNotification": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Bildirishnomani oladigan kuryer ID'si",
                    "type": "string"
                },
                "created_at": {
                    "description": "Bildirishnoma yaratilgan vaqt",
                    "type": "string"
                },
                "is_read": {
                    "description": "Kuryer bildirishnomani o'qiganligini bildiradi",
                    "type": "boolean"
                },
                "message": {
                    "description": "Bildirishnoma matni",
                    "type": "string"
                },
                "notification_id": {
                    "description": "Bildirishnoma ID'si",
                    "type": "string"
                },
                "order_id": {
                    "description": "Bildirishnomaga bog'langan buyurtma ID'si",
                    "type": "string"
                },
                "type": {
                    "description": "Bildirishnoma turi",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.CourierNotificationType"
                        }
                    ]
                }
            }
        },
        "notification.CourierNotificationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "notification": {
                    "description": "Kuryer bildirishnomasi ma'lumotlari (Create operatsiyasi uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.CourierNotification"
                        }
                    ]
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "notification.CourierNotificationType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "CourierNotificationType_NEW_RECOMMENDATION": "Yangi tavsiya bildirishnomasi",
                "CourierNotificationType_ORDER_ASSIGNMENT": "Buyurtma topshiriq bildirishnomasi",
                "CourierNotificationType_STATUS_UPDATE": "Holatni yangilash bildirishnomasi"
            },
            "x-enum-varnames": [
                "CourierNotificationType_NEW_RECOMMENDATION",
                "CourierNotificationType_ORDER_ASSIGNMENT",
                "CourierNotificationType_STATUS_UPDATE"
            ]
        },
        "notification.CreateAdminAlertRequest": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "description": "Ogohlantirishni oladigan admin ID'si",
                    "type": "string"
                },
                "message": {
                    "description": "Ogohlantirish matni",
                    "type": "string"
                },
                "type": {
                    "description": "Ogohlantirish turi",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.AdminAlertType"
                        }
                    ]
                }
            }
        },
        "notification.CreateCourierNotificationRequest": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Bildirishnomani oladigan kuryer ID'si",
                    "type": "string"
                },
                "message": {
                    "description": "Bildirishnoma matni",
                    "type": "string"
                },
                "order_id": {
                    "description": "Bildirishnomaga bog'langan buyurtma ID'si",
                    "type": "string"
                },
                "type": {
                    "description": "Bildirishnoma turi",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.CourierNotificationType"
                        }
                    ]
                }
            }
        },
        "notification.CreateUserNotificationRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Bildirishnoma matni",
                    "type": "string"
                },
                "order_id": {
                    "description": "Bildirishnomaga bog'langan buyurtma ID'si",
                    "type": "string"
                },
                "type": {
                    "description": "Bildirishnoma turi",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.NotificationType"
                        }
                    ]
                },
                "user_id": {
                    "description": "Bildirishnomani oladigan foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "notification.NotificationType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-comments": {
                "NotificationType_ORDER_CONFIRMATION": "Buyurtmani tasdiqlash bildirishnomasi",
                "NotificationType_STATUS_UPDATE_USER": "Holatni yangilash bildirishnomasi"
            },
            "x-enum-varnames": [
                "NotificationType_ORDER_CONFIRMATION",
                "NotificationType_STATUS_UPDATE_USER"
            ]
        },
        "notification.UpdateAdminAlertRequest": {
            "type": "object",
            "properties": {
                "alert_id": {
                    "description": "Ogohlantirish ID'si",
                    "type": "string"
                },
                "is_read": {
                    "description": "Yangilangan o'qilganligi holati",
                    "type": "boolean"
                },
                "message": {
                    "description": "Yangilangan ogohlantirish matni",
                    "type": "string"
                },
                "type": {
                    "description": "Ogohlantirish turi (yangilanishi mumkin)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.AdminAlertType"
                        }
                    ]
                }
            }
        },
        "notification.UserNotification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Bildirishnoma yaratilgan vaqt",
                    "type": "string"
                },
                "is_read": {
                    "description": "Foydalanuvchi bildirishnomani o'qiganligini bildiradi",
                    "type": "boolean"
                },
                "message": {
                    "description": "Bildirishnoma matni",
                    "type": "string"
                },
                "notification_id": {
                    "description": "Bildirishnoma ID'si",
                    "type": "string"
                },
                "order_id": {
                    "description": "Bildirishnomaga bog'langan buyurtma ID'si",
                    "type": "string"
                },
                "type": {
                    "description": "Bildirishnoma turi",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.NotificationType"
                        }
                    ]
                },
                "user_id": {
                    "description": "Bildirishnomani oladigan foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "notification.UserNotificationListResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "description": "Foydalanuvchi bildirishnomalari ro'yxati",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notification.UserNotification"
                    }
                }
            }
        },
        "notification.UserNotificationRequest": {
            "type": "object",
            "properties": {
                "notification_id": {
                    "description": "Bildirishnoma ID'si",
                    "type": "string"
                }
            }
        },
        "notification.UserNotificationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "notification": {
                    "description": "Foydalanuvchi bildirishnomasi ma'lumotlari (Create operatsiyasi uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/notification.UserNotification"
                        }
                    ]
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "product.CardStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "CardStatus_OR_PENDING",
                "CardStatus_COMPLETED",
                "CardStatus_CANCELED"
            ]
        },
        "product.Cart": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "description": "Savatning noyob ID'si",
                    "type": "string"
                },
                "created_at": {
                    "description": "Savat yaratilgan vaqti",
                    "type": "string"
                },
                "user_id": {
                    "description": "Savatga ega foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "product.CartItem": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "description": "Savat ID'si",
                    "type": "string"
                },
                "cart_item_id": {
                    "description": "Savat mahsuloti noyob ID'si",
                    "type": "string"
                },
                "options": {
                    "description": "Variantlar, masalan, o'lcham, qo'shimchalar va hokazo",
                    "type": "string"
                },
                "product_id": {
                    "description": "Mahsulot ID'si",
                    "type": "string"
                },
                "quantity": {
                    "description": "Mahsulot miqdori",
                    "type": "integer"
                }
            }
        },
        "product.CartItemListResponse": {
            "type": "object",
            "properties": {
                "cart_items": {
                    "description": "Savat mahsulotlari ro'yxati",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.CartItem"
                    }
                }
            }
        },
        "product.CartItemResponse": {
            "type": "object",
            "properties": {
                "cart_item": {
                    "description": "Savat mahsuloti ma'lumotlari (Create va Get operatsiyalari uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.CartItem"
                        }
                    ]
                },
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "product.CartListResponse": {
            "type": "object",
            "properties": {
                "carts": {
                    "description": "Savatlar ro'yxati",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Cart"
                    }
                }
            }
        },
        "product.CartResponse": {
            "type": "object",
            "properties": {
                "cart": {
                    "description": "Savat ma'lumotlari (Create va Get operatsiyalari uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.Cart"
                        }
                    ]
                },
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "product.CreateCartItemRequest": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "description": "Savat ID'si",
                    "type": "string"
                },
                "options": {
                    "description": "Variantlar, masalan, o'lcham, qo'shimchalar va hokazo",
                    "type": "string"
                },
                "product_id": {
                    "description": "Mahsulot ID'si",
                    "type": "string"
                },
                "quantity": {
                    "description": "Mahsulot miqdori",
                    "type": "integer"
                }
            }
        },
        "product.CreateCartRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "description": "Savatga ega foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "product.CreateOrderProductRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Buyurtma holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.CardStatus"
                        }
                    ]
                },
                "total_price": {
                    "description": "Buyurtma umumiy summasi",
                    "type": "number"
                },
                "user_id": {
                    "description": "Buyurtma bergan foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "product.CreateOrderRecommendationRequest": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Kuryer ID'si",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtma ID'si",
                    "type": "string"
                },
                "recommended_at": {
                    "description": "Tavsiya qilingan vaqt",
                    "type": "string"
                },
                "status": {
                    "description": "Tavsiya holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.RecommendationStatus"
                        }
                    ]
                }
            }
        },
        "product.CreateProductRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Mahsulot tavsifi",
                    "type": "string"
                },
                "image_url": {
                    "description": "Mahsulotning rasmini saqlovchi URL",
                    "type": "string"
                },
                "name": {
                    "description": "Mahsulot nomi",
                    "type": "string"
                },
                "price": {
                    "description": "Mahsulot narxi",
                    "type": "number"
                }
            }
        },
        "product.OrderProduct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Buyurtma yaratilgan vaqti",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtma noyob ID'si",
                    "type": "string"
                },
                "status": {
                    "description": "Buyurtma holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.CardStatus"
                        }
                    ]
                },
                "total_price": {
                    "description": "Buyurtma umumiy summasi",
                    "type": "number"
                },
                "user_id": {
                    "description": "Buyurtma bergan foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "product.OrderProductListResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "description": "Buyurtmalar ro'yxati",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.OrderProduct"
                    }
                }
            }
        },
        "product.OrderProductResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "order": {
                    "description": "Buyurtma ma'lumotlari (Create va Get operatsiyalari uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.OrderProduct"
                        }
                    ]
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "product.OrderRecommendation": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Kuryer ID'si",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtma ID'si",
                    "type": "string"
                },
                "recommendation_id": {
                    "description": "Tavsiya noyob ID'si",
                    "type": "string"
                },
                "recommended_at": {
                    "description": "Tavsiya qilingan vaqt",
                    "type": "string"
                },
                "status": {
                    "description": "Tavsiya holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.RecommendationStatus"
                        }
                    ]
                }
            }
        },
        "product.OrderRecommendationListResponse": {
            "type": "object",
            "properties": {
                "order_recommendations": {
                    "description": "Tavsiyalar ro'yxati",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.OrderRecommendation"
                    }
                }
            }
        },
        "product.OrderRecommendationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "order_recommendation": {
                    "description": "Tavsiya ma'lumotlari (Create va Get operatsiyalari uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.OrderRecommendation"
                        }
                    ]
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "product.Product": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Mahsulot tavsifi",
                    "type": "string"
                },
                "image_url": {
                    "description": "Mahsulotning rasmini saqlovchi URL",
                    "type": "string"
                },
                "name": {
                    "description": "Mahsulot nomi",
                    "type": "string"
                },
                "price": {
                    "description": "Mahsulot narxi",
                    "type": "number"
                },
                "product_id": {
                    "description": "Mahsulotning noyob ID'si",
                    "type": "string"
                }
            }
        },
        "product.ProductListResponse": {
            "type": "object",
            "properties": {
                "products": {
                    "description": "Mahsulotlar ro'yxati",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Product"
                    }
                }
            }
        },
        "product.ProductResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "product": {
                    "description": "Mahsulot ma'lumotlari (Create va Get operatsiyalari uchun)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.Product"
                        }
                    ]
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "product.RecommendationStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "RecommendationStatus_ACCEPTED": "Tavsiya holati: qabul qilingan",
                "RecommendationStatus_PENDING": "Tavsiya holati: kutayotgan",
                "RecommendationStatus_REJECTED": "Tavsiya holati: rad etilgan"
            },
            "x-enum-varnames": [
                "RecommendationStatus_PENDING",
                "RecommendationStatus_ACCEPTED",
                "RecommendationStatus_REJECTED"
            ]
        },
        "product.UpdateCartItemRequest": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "description": "Savat ID'si",
                    "type": "string"
                },
                "cart_item_id": {
                    "description": "Savat mahsuloti noyob ID'si",
                    "type": "string"
                },
                "options": {
                    "description": "Variantlar, masalan, o'lcham, qo'shimchalar va hokazo",
                    "type": "string"
                },
                "product_id": {
                    "description": "Mahsulot ID'si",
                    "type": "string"
                },
                "quantity": {
                    "description": "Mahsulot miqdori",
                    "type": "integer"
                }
            }
        },
        "product.UpdateCartRequest": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "description": "Savatning noyob ID'si",
                    "type": "string"
                },
                "user_id": {
                    "description": "Savatga ega foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "product.UpdateOrderProductRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "description": "Buyurtma noyob ID'si",
                    "type": "string"
                },
                "status": {
                    "description": "Buyurtma holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.CardStatus"
                        }
                    ]
                },
                "total_price": {
                    "description": "Buyurtma umumiy summasi",
                    "type": "number"
                }
            }
        },
        "product.UpdateOrderRecommendationRequest": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Kuryer ID'si",
                    "type": "string"
                },
                "order_id": {
                    "description": "Buyurtma ID'si",
                    "type": "string"
                },
                "recommendation_id": {
                    "description": "Tavsiya noyob ID'si",
                    "type": "string"
                },
                "recommended_at": {
                    "description": "Tavsiya qilingan vaqt",
                    "type": "string"
                },
                "status": {
                    "description": "Tavsiya holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/product.RecommendationStatus"
                        }
                    ]
                }
            }
        },
        "product.UpdateProductRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Mahsulot tavsifi",
                    "type": "string"
                },
                "image_url": {
                    "description": "Mahsulotning rasmini saqlovchi URL",
                    "type": "string"
                },
                "name": {
                    "description": "Mahsulot nomi",
                    "type": "string"
                },
                "price": {
                    "description": "Mahsulot narxi",
                    "type": "number"
                },
                "product_id": {
                    "description": "Mahsulotning noyob ID'si",
                    "type": "string"
                }
            }
        },
        "user.Courier": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "description": "Kuryer ID'si",
                    "type": "string"
                },
                "created_at": {
                    "description": "Kuryer yaratilgan vaqti",
                    "type": "string"
                },
                "email": {
                    "description": "Kuryer email manzili",
                    "type": "string"
                },
                "full_name": {
                    "description": "Kuryer to'liq ismi",
                    "type": "string"
                },
                "phone_number": {
                    "description": "Kuryer telefon raqami",
                    "type": "string"
                },
                "status": {
                    "description": "Kuryer holati",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.CourierStatus"
                        }
                    ]
                },
                "updated_at": {
                    "description": "Kuryer yangilangan vaqti",
                    "type": "string"
                }
            }
        },
        "user.CourierLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Kuryer email manzili",
                    "type": "string"
                },
                "password": {
                    "description": "Kuryer paroli",
                    "type": "string"
                }
            }
        },
        "user.CourierLoginResponse": {
            "type": "object",
            "properties": {
                "courier": {
                    "description": "Kuryer ma'lumotlari",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.Courier"
                        }
                    ]
                },
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                },
                "token": {
                    "description": "JWT token or session ID",
                    "type": "string"
                }
            }
        },
        "user.CourierRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Kuryer email manzili",
                    "type": "string"
                },
                "full_name": {
                    "description": "Kuryer to'liq ismi",
                    "type": "string"
                },
                "password": {
                    "description": "Kuryer paroli",
                    "type": "string"
                },
                "phone_number": {
                    "description": "Kuryer telefon raqami",
                    "type": "string"
                }
            }
        },
        "user.CourierRegisterResponse": {
            "type": "object",
            "properties": {
                "courier": {
                    "description": "Kuryer ma'lumotlari",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.Courier"
                        }
                    ]
                },
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                }
            }
        },
        "user.CourierStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "CourierStatus_AVAILABLE",
                "CourierStatus_UNAVAILABLE",
                "CourierStatus_ON_DELIVERY"
            ]
        },
        "user.GetAllCouriersResponse": {
            "type": "object",
            "properties": {
                "couriers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.Courier"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "user.GetAllUsersResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.User"
                    }
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Foydalanuvchi email manzili",
                    "type": "string"
                },
                "full_name": {
                    "description": "Foydalanuvchi to'liq ismi",
                    "type": "string"
                },
                "role": {
                    "description": "Foydalanuvchi roli",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.UserRole"
                        }
                    ]
                },
                "user_id": {
                    "description": "Foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Foydalanuvchi yaratilgan vaqti",
                    "type": "string"
                },
                "email": {
                    "description": "Foydalanuvchi email manzili",
                    "type": "string"
                },
                "full_name": {
                    "description": "Foydalanuvchi to'liq ismi",
                    "type": "string"
                },
                "role": {
                    "description": "Foydalanuvchi roli",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.UserRole"
                        }
                    ]
                },
                "updated_at": {
                    "description": "Foydalanuvchi yangilangan vaqti",
                    "type": "string"
                },
                "user_id": {
                    "description": "Foydalanuvchi ID'si",
                    "type": "string"
                }
            }
        },
        "user.UserLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Foydalanuvchi email manzili",
                    "type": "string"
                },
                "password": {
                    "description": "Foydalanuvchi paroli",
                    "type": "string"
                }
            }
        },
        "user.UserLoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                },
                "token": {
                    "description": "JWT token or session ID",
                    "type": "string"
                },
                "user": {
                    "description": "Foydalanuvchi ma'lumotlari",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.User"
                        }
                    ]
                }
            }
        },
        "user.UserRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Foydalanuvchi email manzili",
                    "type": "string"
                },
                "full_name": {
                    "description": "Foydalanuvchi to'liq ismi",
                    "type": "string"
                },
                "password": {
                    "description": "Foydalanuvchi paroli",
                    "type": "string"
                }
            }
        },
        "user.UserRegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                },
                "user": {
                    "description": "Foydalanuvchi ma'lumotlari",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.User"
                        }
                    ]
                }
            }
        },
        "user.UserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Javob xabari",
                    "type": "string"
                },
                "success": {
                    "description": "Amaliyot muvaffaqiyatli bo'lganligini bildiruvchi flag",
                    "type": "boolean"
                },
                "user": {
                    "description": "Foydalanuvchi ma'lumotlari",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.User"
                        }
                    ]
                }
            }
        },
        "user.UserRole": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "UserRole_USER",
                "UserRole_ADMIN"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Food Delivery System API",
	Description:      "API for Food Delivery System resources",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
