version: '3.9'

services:
  migrate:
    image: migrate/migrate
    networks:
      - GLhost
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database",  
                "postgres://postgres:root@delivery_product_db:5432/delivery_product_db?sslmode=disable", 
                "up" ]
    depends_on:
      - postgres-db
   

  postgres-db:
    container_name: delivery_product_db 
    image: postgres:latest
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
      POSTGRES_DB: delivery_product_db 
    volumes:
      - db:/product-database/product-memory
    ports:
      - "5436:5432"
    networks:
      - GLhost
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5   


  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper_delivery
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - GLhost

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka_delivery
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - GLhost
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_delivery:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_delivery:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  

  delivery_product:
    container_name: delivery_product
    build: .
    depends_on:
      - kafka
      
    ports:
      - "6060:6060"
    networks:
      - GLhost
      

# Docker Networks
networks:
  GLhost:
    external: true
    name: delivery
    driver: bridge      

volumes:
  db:    