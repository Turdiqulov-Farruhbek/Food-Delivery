{
    "swagger": "2.0",
    "info": {
        "description": "API for Instant Delivery resources",
        "title": "Instant Delivery API Documentation",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/item/delete/{item_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an item by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item",
                    "User",
                    "Admin"
                ],
                "summary": "Delete Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/get/{item_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get an item by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item",
                    "User"
                ],
                "summary": "Get Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item data",
                        "schema": {
                            "$ref": "#/definitions/genproto.ItemGet"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/update/{item_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item",
                    "User",
                    "Admin"
                ],
                "summary": "Update Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.ItemCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/{user_id}/all-items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List items based on filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item",
                    "User",
                    "Admin"
                ],
                "summary": "List Items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Min Price",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max Price",
                        "name": "max_price",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of items",
                        "schema": {
                            "$ref": "#/definitions/genproto.ItemList"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/{user_id}/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item",
                    "User"
                ],
                "summary": "Add Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.ItemCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/kitchen/all-kitchens": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List kitchens with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchens",
                    "Admin"
                ],
                "summary": "List kitchens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen manager id",
                        "name": "manager_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kitchen name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kitchen phone number",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kitchen Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kitchen Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ofsset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of kitchens",
                        "schema": {
                            "$ref": "#/definitions/genproto.KitchenList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/kitchen/delete/{kitchen_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a kitchen by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchens",
                    "Admin"
                ],
                "summary": "Delete a kitchen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kitchen deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/kitchen/get/{kitchen_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a kitchen by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchens"
                ],
                "summary": "Get a kitchen by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kitchen details",
                        "schema": {
                            "$ref": "#/definitions/genproto.KitchenGet"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/kitchen/update/{manager_id}/{kitchen_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a kitchen by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchens",
                    "Admin",
                    "Manager"
                ],
                "summary": "Update a kitchen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manager ID",
                        "name": "manager_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Kitchen Create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.KitchenCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kitchen Updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/kitchen/{manager_id}/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new kitchen for a manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchens",
                    "Admin"
                ],
                "summary": "Create a new kitchen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manager ID",
                        "name": "manager_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Kitchen Create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.KitchenCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kitchen Created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/location/get/{courier_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current location of a courier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Location"
                ],
                "summary": "Get Courier Location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courier_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Courier location",
                        "schema": {
                            "$ref": "#/definitions/genproto.LocationCreate"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/location/update/{courier_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the location of a courier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Location"
                ],
                "summary": "Update Courier Location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courier_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location Update Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.LocationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/location/{courier_id}/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new location for a courier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Location",
                    "Courier"
                ],
                "summary": "Create Location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courier_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location Create Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.LocationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notification/all-notifications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve notifications based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get Notifications",
                "parameters": [
                    {
                        "description": "Filter Data",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.NotifFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notifications",
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationList"
                        }
                    },
                    "400": {
                        "description": "Invalid filter parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notification/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new notification and produce a message to Kafka",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Create a Notification",
                "parameters": [
                    {
                        "description": "Notification Data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notification/delete/{notification_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing notification by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete a Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid notification ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notification/get/{notification_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a notification by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get Notification by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification details",
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationGet"
                        }
                    },
                    "400": {
                        "description": "Invalid notification ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notification/notify-all": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Send a notification to all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Notify All Users",
                "parameters": [
                    {
                        "description": "Notification Message",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification sent to all users",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notification/update/{notification_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing notification by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Update a Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification Data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationUpt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/all-orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve orders based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Admin"
                ],
                "summary": "List Orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courier_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum Total",
                        "name": "min_total",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum Total",
                        "name": "max_total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time From",
                        "name": "time_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time To",
                        "name": "time_to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "schema": {
                            "$ref": "#/definitions/genproto.OrderList"
                        }
                    },
                    "400": {
                        "description": "Invalid filter parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/assign": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign an order to a specific entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Admin"
                ],
                "summary": "Assign an Order",
                "parameters": [
                    {
                        "description": "Order Assignment Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.OrderAssign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order assigned successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/create/{user_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new order and produce a message to Kafka",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "User"
                ],
                "summary": "Create a New Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.OrderCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/delete/{order_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing order by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "User"
                ],
                "summary": "Delete an Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/get/{order_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve an order by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "User"
                ],
                "summary": "Get Order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "schema": {
                            "$ref": "#/definitions/genproto.OrderGet"
                        }
                    },
                    "400": {
                        "description": "Invalid order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/pickup/{order_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark an order as picked up",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Courier"
                ],
                "summary": "Pick Up an Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order picked up successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid order ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/update/{order_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing order by its ID and produce a message to Kafka",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "User"
                ],
                "summary": "Update an Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order Data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.OrderUpt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{order_id}/checkout": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Checks out the order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Checks an Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "order review",
                        "schema": {
                            "$ref": "#/definitions/genproto.OrderReview"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/all-product": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve products based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "User"
                ],
                "summary": "List Products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Name",
                        "name": "Name",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum Price",
                        "name": "MinPrice",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum Price",
                        "name": "MaxPrice",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Product Description",
                        "name": "Description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "KitchenId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "Limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "Offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "$ref": "#/definitions/genproto.ProductList"
                        }
                    },
                    "400": {
                        "description": "Invalid filter parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/create/{kitchen_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new product and produce a message to Kafka",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "Kitchen Manager"
                ],
                "summary": "Create a New Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.ProductCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/delete/{product_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing product by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "Kitchen Manager"
                ],
                "summary": "Delete a Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/get/{product_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a product by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "User"
                ],
                "summary": "Get Product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "schema": {
                            "$ref": "#/definitions/genproto.ProductGet"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/update/{product_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing product by its ID and produce a message to Kafka",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "Kitchen Manager"
                ],
                "summary": "Update a Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.ProductCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/{product_id}/upload_photo": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "File upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "File upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/all-users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users based on filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get All Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "User role",
                        "name": "is_working",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "User limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "User offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "$ref": "#/definitions/genproto.UserList"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/courier/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new courier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create Courier",
                "parameters": [
                    {
                        "description": "Courier data",
                        "name": "courier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Courier Created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/k-manager/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new kitchen manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create Kitchen Manager",
                "parameters": [
                    {
                        "description": "Kitchen Manager data",
                        "name": "kitchen_manager",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Kitchen Manager Created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{courier_id}/order/accept/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Accept an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order",
                    "Courier"
                ],
                "summary": "Accept Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courier_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order ID",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.OrderId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genproto.Filter": {
            "type": "object",
            "properties": {
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                }
            }
        },
        "genproto.ItemCreate": {
            "type": "object",
            "properties": {
                "ProductId": {
                    "type": "string"
                },
                "Quantity": {
                    "type": "integer"
                }
            }
        },
        "genproto.ItemGet": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/definitions/genproto.ProductGet"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "OrderId": {
                    "type": "string"
                },
                "Price": {
                    "type": "number"
                },
                "Quantity": {
                    "type": "integer"
                }
            }
        },
        "genproto.ItemList": {
            "type": "object",
            "properties": {
                "Count": {
                    "type": "integer"
                },
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.ItemGet"
                    }
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                }
            }
        },
        "genproto.KitchenCreate": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Latitude": {
                    "type": "number"
                },
                "Longitude": {
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                }
            }
        },
        "genproto.KitchenGet": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Latitude": {
                    "type": "number"
                },
                "Longitude": {
                    "type": "number"
                },
                "ManagerId": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                }
            }
        },
        "genproto.KitchenList": {
            "type": "object",
            "properties": {
                "Kitchens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.KitchenGet"
                    }
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                }
            }
        },
        "genproto.LocationCreate": {
            "type": "object",
            "properties": {
                "Latitude": {
                    "type": "number"
                },
                "Longitude": {
                    "type": "number"
                }
            }
        },
        "genproto.NotifFilter": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/definitions/genproto.Filter"
                },
                "RecieverId": {
                    "type": "string"
                },
                "SenderId": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "genproto.NotificationCreate": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "RecieverId": {
                    "type": "string"
                },
                "SenderId": {
                    "type": "string"
                }
            }
        },
        "genproto.NotificationGet": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "SenderId": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.NotificationList": {
            "type": "object",
            "properties": {
                "Limit": {
                    "type": "integer"
                },
                "Notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.NotificationGet"
                    }
                },
                "Offset": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                }
            }
        },
        "genproto.NotificationMessage": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "SenderId": {
                    "type": "string"
                },
                "TargetGroup": {
                    "type": "string"
                }
            }
        },
        "genproto.NotificationUpt": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "genproto.OrderAssign": {
            "type": "object",
            "properties": {
                "CourierId": {
                    "type": "string"
                },
                "OrderId": {
                    "type": "string"
                }
            }
        },
        "genproto.OrderCreate": {
            "type": "object",
            "properties": {
                "DeliveryAddress": {
                    "type": "string"
                },
                "DeliveryTime": {
                    "type": "string"
                }
            }
        },
        "genproto.OrderGet": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "CourierId": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "DeliveryTime": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "IsPaid": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "Total": {
                    "type": "number"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.OrderId": {
            "type": "object",
            "properties": {
                "OrderId": {
                    "type": "string"
                }
            }
        },
        "genproto.OrderList": {
            "type": "object",
            "properties": {
                "Count": {
                    "type": "integer"
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "Orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.OrderGet"
                    }
                }
            }
        },
        "genproto.OrderReview": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "CourierId": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "DeliveryTime": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "IsPaid": {
                    "type": "string"
                },
                "Items": {
                    "$ref": "#/definitions/genproto.ItemList"
                },
                "Status": {
                    "type": "string"
                },
                "Total": {
                    "type": "number"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.OrderUpt": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "CourierId": {
                    "type": "string"
                },
                "DeliveryTime": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "Total": {
                    "type": "number"
                }
            }
        },
        "genproto.ProductCreate": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Image": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Price": {
                    "type": "number"
                }
            }
        },
        "genproto.ProductGet": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Image": {
                    "type": "string"
                },
                "KitchenId": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Price": {
                    "type": "number"
                }
            }
        },
        "genproto.ProductList": {
            "type": "object",
            "properties": {
                "Count": {
                    "type": "integer"
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.ProductGet"
                    }
                }
            }
        },
        "genproto.UserCreateReq": {
            "type": "object",
            "properties": {
                "Dob": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "FullName": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "genproto.UserCreateRes": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Dob": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "FullName": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "genproto.UserList": {
            "type": "object",
            "properties": {
                "Count": {
                    "type": "integer"
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "Users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.UserCreateRes"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}